package com.qichen.code3;

/**
 * abstract关键字
 * 抽象类与抽象方法
 * 抽象类是用来模型化那些父类无法确定全部实现，而是由其子类提
 * 供具体实现的对象的类。
 * @author qichen
 * @date 2019/10/28
 * @since JDK1.8
 */
/*
     用abstract关键字来修饰一个类， 这个类叫做抽象类。
        此类不能实例化
        抽象类提供构造器，方便子类对象实例化时调用（涉及子类对象实例化全过程）

     用abstract来修饰一个方法， 该方法叫做抽象方法。
        抽象方法：只有方法的声明，没有方法的实现。以分号结束：
            比如： public abstract void talk();
     含有抽象方法的类必须被声明为抽象类。
     抽象类不能被实例化。抽象类是用来被继承的，抽象类的子类必须重
        写父类的抽象方法，并提供方法体。若没有重写全部的抽象方法，仍
        为抽象类。
     不能用abstract修饰变量、代码块、构造器；
     不能用abstract修饰私有方法、静态方法、 final的方法、 final的类。
 */
/*
    Java允许类设计者指定：超类声明一个方法但不提供实现，该方法的实现由子类提供。
    这样的方法称为抽象方法。有一个或更多抽象方法的类称为抽象类。
 */
public class AbstractClass {

}
